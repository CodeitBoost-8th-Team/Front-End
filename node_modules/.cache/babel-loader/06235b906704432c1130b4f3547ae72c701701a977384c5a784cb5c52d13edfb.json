{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jayoon\\\\Desktop\\\\codeit_project\\\\Front-End\\\\Post\\\\src\\\\pages\\\\PostCreatePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\nimport PostForm from \"../components/PostForm\";\nimport \"./PostCreatePage.css\";\nimport logo from \"../img/logo.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostCreatePage(onSuccess, onFailure) {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalMessage, setModalMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handlePostCreationSuccess = PostId => {\n    setModalMessage(\"추억 만들기 성공!\");\n    setIsModalOpen(true);\n    setTimeout(() => {\n      navigate(`/`); // 추억 상세 페이지로 이동\n    }, 2000); // 2초 후에 페이지 전환\n  };\n  const handlePostCreationFailure = message => {\n    setModalMessage(message);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // submit 핸들러\n  const handleSubmit = async e => {\n    // e.preventDefault();\n\n    // try {\n    // 1. 이미지 파일을 서버로 업로드\n    const imageData = new FormData();\n    imageData.append(\"image\", postImage);\n    const imageUploadResponse = await axios.post(\"/api/image\", imageData); // 명세서에 따른 올바른 경로 사용\n    const imageUrl = imageUploadResponse.data.imageUrl;\n\n    // 2. 업로드된 이미지의 URL과 나머지 데이터를 서버로 전송\n    const formData = new FormData();\n    formData.append(\"nickname\", postNickname);\n    formData.append(\"title\", postTitle);\n    formData.append(\"imageUrl\", imageUrl); // 이미지 URL 필드에 업로드된 이미지 URL 추가\n    formData.append(\"content\", postContent);\n    formData.append(\"tags\", JSON.stringify(postTag)); // 태그 배열을 JSON 문자열로 변환하여 추가\n    formData.append(\"location\", postLocation);\n    formData.append(\"moment\", postMoment);\n    formData.append(\"postPassword\", postPassword);\n    // formData.append(\"groupPassword\", groupPassword);\n\n    try {\n      // 서버에 데이터 전송\n      const response = await axios.post(\"/api/groups/{groupId}/posts\", formData);\n      if (response.status === 200) {\n        onSuccess(response.data.id); // 생성된 그룹 ID 전달\n        // 등록한 게시글 상세 페이지(임시 = /)로 이동\n        navigate(\"/\"); //  -> /를 등록한 게시글 상세 페이지로 이동하게끔 수정 필요\n      } else if (response.status === 400) {\n        onFailure(\"잘못된 요청입니다.\");\n      } else if (response.status === 401) {\n        onFailure(\"비밀번호가 틀렸습니다.\");\n      }\n    } catch (error) {\n      onFailure(\"게시글 생성 중 오류가 발생했습니다. 다시 시도해주세요.\");\n      console.error(\"게시글 생성 중 오류 발생:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postCreatePageC\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerC\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerLogoC\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"logoC\",\n          src: logo,\n          alt: \"\\uB85C\\uACE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerC\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentHeaderC\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"contentHeaderC\",\n          children: \"\\uCD94\\uC5B5 \\uC62C\\uB9AC\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n        onSuccess: handlePostCreationSuccess,\n        onFailure: handlePostCreationFailure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"postButtonC\",\n        type: \"submit\",\n        onSubmit: handleSubmit,\n        children: \"\\uC62C\\uB9AC\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(PostCreatePage, \"gMDkGt+v/HEUZp9tyqMlvAmCVT8=\", false, function () {\n  return [useNavigate];\n});\n_c = PostCreatePage;\nexport default PostCreatePage;\nvar _c;\n$RefreshReg$(_c, \"PostCreatePage\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","PostForm","logo","jsxDEV","_jsxDEV","PostCreatePage","onSuccess","onFailure","_s","isModalOpen","setIsModalOpen","modalMessage","setModalMessage","navigate","handlePostCreationSuccess","PostId","setTimeout","handlePostCreationFailure","message","closeModal","handleSubmit","e","imageData","FormData","append","postImage","imageUploadResponse","axios","post","imageUrl","data","formData","postNickname","postTitle","postContent","JSON","stringify","postTag","postLocation","postMoment","postPassword","response","status","id","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Jayoon/Desktop/codeit_project/Front-End/Post/src/pages/PostCreatePage.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport \"./PostCreatePage.css\";\r\nimport logo from \"../img/logo.jpg\";\r\n\r\nfunction PostCreatePage(onSuccess, onFailure) {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handlePostCreationSuccess = (PostId) => {\r\n    setModalMessage(\"추억 만들기 성공!\");\r\n    setIsModalOpen(true);\r\n\r\n    setTimeout(() => {\r\n      navigate(`/`); // 추억 상세 페이지로 이동\r\n    }, 2000); // 2초 후에 페이지 전환\r\n  };\r\n\r\n  const handlePostCreationFailure = (message) => {\r\n    setModalMessage(message);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  // submit 핸들러\r\n  const handleSubmit = async (e) => {\r\n    // e.preventDefault();\r\n\r\n    // try {\r\n    // 1. 이미지 파일을 서버로 업로드\r\n    const imageData = new FormData();\r\n    imageData.append(\"image\", postImage);\r\n\r\n    const imageUploadResponse = await axios.post(\"/api/image\", imageData); // 명세서에 따른 올바른 경로 사용\r\n    const imageUrl = imageUploadResponse.data.imageUrl;\r\n\r\n    // 2. 업로드된 이미지의 URL과 나머지 데이터를 서버로 전송\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"nickname\", postNickname);\r\n    formData.append(\"title\", postTitle);\r\n    formData.append(\"imageUrl\", imageUrl); // 이미지 URL 필드에 업로드된 이미지 URL 추가\r\n    formData.append(\"content\", postContent);\r\n    formData.append(\"tags\", JSON.stringify(postTag)); // 태그 배열을 JSON 문자열로 변환하여 추가\r\n    formData.append(\"location\", postLocation);\r\n    formData.append(\"moment\", postMoment);\r\n    formData.append(\"postPassword\", postPassword);\r\n    // formData.append(\"groupPassword\", groupPassword);\r\n\r\n    try {\r\n      // 서버에 데이터 전송\r\n      const response = await axios.post(\r\n        \"/api/groups/{groupId}/posts\",\r\n        formData\r\n      );\r\n      if (response.status === 200) {\r\n        onSuccess(response.data.id); // 생성된 그룹 ID 전달\r\n        // 등록한 게시글 상세 페이지(임시 = /)로 이동\r\n        navigate(\"/\"); //  -> /를 등록한 게시글 상세 페이지로 이동하게끔 수정 필요\r\n      } else if (response.status === 400) {\r\n        onFailure(\"잘못된 요청입니다.\");\r\n      } else if (response.status === 401) {\r\n        onFailure(\"비밀번호가 틀렸습니다.\");\r\n      }\r\n    } catch (error) {\r\n      onFailure(\"게시글 생성 중 오류가 발생했습니다. 다시 시도해주세요.\");\r\n      console.error(\"게시글 생성 중 오류 발생:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"postCreatePageC\">\r\n      <div className=\"headerC\">\r\n        <div className=\"headerLogoC\">\r\n          <img id=\"logoC\" src={logo} alt=\"로고\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"containerC\">\r\n        <div className=\"contentHeaderC\">\r\n          <div id=\"contentHeaderC\">추억 올리기</div>\r\n        </div>\r\n\r\n        <PostForm\r\n          onSuccess={handlePostCreationSuccess}\r\n          onFailure={handlePostCreationFailure}\r\n        />\r\n\r\n        <button className=\"postButtonC\" type=\"submit\" onSubmit={handleSubmit}>\r\n          올리기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostCreatePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}